#SBTCVM 27x27 stars demo "starry.tasm"
#consists of a whopping 9 dots... :p
#uses 2, 2 trit seed integers (one for x and one for y), per dot.

setkeyint|:q
keyint|>end


#random gen 1
#get y
offsetlen|on,0,2|resetp
IOread1|>random
#get x
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
#check if zero, if so recalculate seed.
setreg2|000000000
gotodataif|>resetp
#write seed to scratch memory for later use.
IOwrite1|>mem1

#random gen 2
offsetlen|on,0,2|resetp2
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp2
IOwrite1|>mem2

#random gen 3
offsetlen|on,0,2|resetp3
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp3
IOwrite1|>mem3

#random gen 4
offsetlen|on,0,2|resetp4
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp4
IOwrite1|>mem4


#random gen 5
offsetlen|on,0,2|resetp5
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp5
IOwrite1|>mem5

#random gen 6
offsetlen|on,0,2|resetp6
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp6
IOwrite1|>mem6

#random gen 7
offsetlen|on,0,2|resetp7
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp7
IOwrite1|>mem7


#random gen 8
offsetlen|on,0,2|resetp8
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp8
IOwrite1|>mem8

#random gen 9
offsetlen|on,0,2|resetp9
IOread1|>random
offsetlen|off,3,2
IOread1|>random
#dumpreg1
offsetlen|off,0,9
setreg2|000000000
gotodataif|>resetp9
IOwrite1|>mem9

#mainloop startup
offsetlen|off,0,9
setreg1|000000000
setdata|>point1
setdata|>point2
setdata|>point3
setdata|>point4
setdata|>point5
setdata|>point6
setdata|>point7
setdata|>point8
setdata|>point9

#IOwrite1|>mem4
#mainloop

#drawing routine
setcolorreg|000++++++|mainloop
colorfill|---------
colorpixel|000000000|point1
colorpixel|000000000|point2
colorpixel|000000000|point3
colorpixel|000000000|point4
colorpixel|000000000|point5
colorpixel|000000000|point6
colorpixel|000000000|point7
colorpixel|000000000|point8
colorpixel|000000000|point9

#main inc routine
romread2|>point1
IOread1|>mem1
add
setdata|>point1

#rollover check 1
offsetlen|on,6,3
romread1|>point1
setreg2|000000000
gotodataif|>cont1
gotodata|>resetp
offsetlen|off,0,9|cont1

romread2|>point2
IOread1|>mem2
add
setdata|>point2

#rollover check 2
offsetlen|on,6,3
romread1|>point2
setreg2|000000000
gotodataif|>cont2
gotodata|>resetp
offsetlen|off,0,9|cont2


romread2|>point3
IOread1|>mem3
add
setdata|>point3

#rollover check 3
offsetlen|on,6,3
romread1|>point3
setreg2|000000000
gotodataif|>cont3
gotodata|>resetp
offsetlen|off,0,9|cont3

romread2|>point4
IOread1|>mem4
add
setdata|>point4

#rollover check 4
offsetlen|on,6,3
romread1|>point4
setreg2|000000000
gotodataif|>cont4
gotodata|>resetp
offsetlen|off,0,9|cont4

romread2|>point5
IOread1|>mem5
add
setdata|>point5

#rollover check 3
offsetlen|on,6,3
romread1|>point5
setreg2|000000000
gotodataif|>cont5
gotodata|>resetp
offsetlen|off,0,9|cont5

romread2|>point6
IOread1|>mem6
add
setdata|>point6

#rollover check 6
offsetlen|on,6,3
romread1|>point6
setreg2|000000000
gotodataif|>cont6
gotodata|>resetp
offsetlen|off,0,9|cont6

romread2|>point7
IOread1|>mem7
add
setdata|>point7

#rollover check 7
offsetlen|on,6,3
romread1|>point7
setreg2|000000000
gotodataif|>cont7
gotodata|>resetp
offsetlen|off,0,9|cont7

romread2|>point8
IOread1|>mem8
add
setdata|>point8

#rollover check 8
offsetlen|on,6,3
romread1|>point8
setreg2|000000000
gotodataif|>cont8
gotodata|>resetp
offsetlen|off,0,9|cont8

romread2|>point9
IOread1|>mem9
add
setdata|>point9

#rollover check 9
offsetlen|on,6,3
romread1|>point9
setreg2|000000000
gotodataif|>cont9
gotodata|>resetp
offsetlen|off,0,9|cont9


gotodata|>mainloop
stop||end
